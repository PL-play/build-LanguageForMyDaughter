want "duoduolib/libarr.duo" as ll;
puffln( [1,2,3] );
puffln( [] );
puffln( __len([]) );
waa arr = [1,2,3];
puffln( __len(arr) );
puffln( [1,2,3][1] );
ll.printv(1);
puff("\n");
arr[1] = 100;
ll.printv(arr);
puff("\n");
arr[-1] =3.14;
ll.printv(arr);
puff("\n");
arr = [0,1,2,3,4,5,6,7,8,9];
ll.printv(arr);
puff("\n");
ll.printv(arr[1:]);
puff("\n");
ll.printv(arr[1:4]);
puff("\n");
ll.printv(arr[:]);
puff("\n");
ll.printv(arr[:0]);
puff("\n");
ll.printv(arr[-10:]);
puff("\n");
puffln( arr[-10:][2]=5 );
waa a1 = [[1,2,3],[4,5,6]];
puffln( __type(a1) );
puffln( __array_type );
puffln( __type(a1)== __array_type );
ll.printv(a1);
puff("\n");
ll.printv(a1[1:2][0][1:2]);
puff("\n");
ll.printv([[1,2,3,["a","b","c"]],[4,5,6]]);
puff("\n");
puffln("------end---------");